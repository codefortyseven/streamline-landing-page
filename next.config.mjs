let userConfig = undefined\ntry {\n  // try to import ESM first\n  userConfig = await import('./v0-user-next.config.mjs')\n} catch (e) {\n  try {\n    // fallback to CJS import\n    userConfig = await import(\"./v0-user-next.config\");\n  } catch (innerError) {\n    // ignore error\n  }\n}\n\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  eslint: {\n    ignoreDuringBuilds: true,\n  },\n  typescript: {\n    ignoreBuildErrors: true,\n  },\n  images: {\n    unoptimized: true,\n  },\n  experimental: {\n    webpackBuildWorker: true,\n    parallelServerBuildTraces: true,\n    parallelServerCompiles: true,\n  },\n}\n\nif (userConfig) {\n  // ESM imports will have a \"default\" property\n  const config = userConfig.default || userConfig\n\n  for (const key in config) {\n    if (\n      typeof nextConfig[key] === 'object' &&\n      !Array.isArray(nextConfig[key])\n    ) {\n      nextConfig[key] = {\n        ...nextConfig[key],\n        ...config[key],\n      }\n    } else {\n      nextConfig[key] = config[key]\n    }\n  }\n}\n\nexport default nextConfig